package com.handstandtech.flickr.server;

import java.io.File;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import oauth.signpost.OAuthConsumer;

import com.handstandtech.restclient.server.auth.Authenticator;
import com.handstandtech.restclient.server.model.RESTRequest;
import com.handstandtech.restclient.shared.model.RequestMethod;
import com.handstandtech.restclient.shared.util.RESTURLUtil;

public class FlickrUploader {
	private static String UPLOAD_API_ENDPOINT = "http://api.flickr.com/services/upload/";

	public static RESTRequest upload(Object photo, String title, String description,
			List<String> tags, Boolean is_public, Boolean is_friend,
			Boolean is_family, FlickrSafetyLevel safety_level,
			FlickrContentType content_type, Boolean hidden, Authenticator auth) {
		Map<String, String> params = new HashMap<String, String>();

		if (title != null && title.length() > 0) {
			try {
				params.put("title", URLEncoder.encode(title, "UTF-8"));
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
		}
		if (description != null && description.length() > 0) {
			try {
				params.put("description",
						URLEncoder.encode(description, "UTF-8"));
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
		}
		if (content_type != null) {
			params.put("content_type", content_type.getValue() + "");
		}
		if (hidden != null) {
			String value = null;
			if (hidden.booleanValue()) {
				value = "2";
			} else {
				value = "1";
			}

			params.put("hidden", value);
		}
		if (safety_level != null) {
			params.put("safety_level", safety_level.getValue() + "");
		}
		params.put("format", "json");
		params.put("nojsoncallback", "1");

		String url = RESTURLUtil.createFullUrl(, params);

		RESTRequest restRequest = new RESTRequest(RequestMethod.POST, UPLOAD_API_ENDPOINT, auth);
		return restRequest;

	}
}
