package net.onamap.server.controller.action;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.onamap.server.constants.FlickrConstants;
import net.onamap.server.constants.RequestParams;
import net.onamap.server.util.RequestHelper;
import net.onamap.server.util.SessionHelper;
import oauth.signpost.OAuthConsumer;
import oauth.signpost.OAuthProvider;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.inject.Singleton;
import com.handstandtech.flickr.server.FlickrHelper;

import com.handstandtech.flickr.server.FlickrPerm;

/**
 * A trivial consumer of the 'friends_timeline' service at Twitter.
 * 
 * @author Sam Edwards
 */
@Singleton
public class FlickrOAuth10aLogin extends HttpServlet {

	private static Logger log = LoggerFactory
			.getLogger(FlickrOAuth10aLogin.class.getName());

	/**
	 * Default Serialization UID
	 */
	private static final long serialVersionUID = 1L;

	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws IOException, ServletException {
		log.info("Flickr OAuth Login...");
		try {

			OAuthConsumer consumer = FlickrConstants.getOAuthConsumer();

			log.info("Consumer Key: " + consumer.getConsumerKey());
			log.info("Consumer Secret: " + consumer.getConsumerSecret());

			OAuthProvider provider = FlickrHelper.getFlickrOAuthProvider();

			log.debug("Fetching request token from Flickr...");

			String baseUrl = RequestHelper.getStringValue(request,
					RequestParams.DOMAIN_BASE_URL);
			String authUrl = provider.retrieveRequestToken(consumer, baseUrl
					+ "/action/flickr/callback");

			SessionHelper.setFlickrConsumer(request, consumer);

			log.info("Auth URL: " + authUrl);

			response.sendRedirect(authUrl);
		} catch (Exception e) {
			e.printStackTrace();
			log.error(e.getMessage(), e);
		}
	}
}
